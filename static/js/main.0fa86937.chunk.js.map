{"version":3,"sources":["components/ImageGalleryItem/ImageGalleryItem.module.css","components/Modal/Modal.module.css","components/ImageGallery/ImageGallery.module.css","components/Button/Button.module.css","components/Searchbar/SearchBar.module.css","hooks/useToggle.js","components/Searchbar/SearchBar.js","components/Services/pixabay.js","components/ImageGalleryItem/ImageGalleryItem.js","components/Button/Button.js","components/ImageGallery/ImageGallery.js","components/Modal/Modal.js","components/Loader/Loader.js","App.js","index.js"],"names":["module","exports","useToggle","initValue","useState","state","setState","prev","SearchBar","getSearchValues","searchValue","setSearchValue","perPage","setPerPage","className","s","Searchbar","SearchForm","onSubmit","e","preventDefault","console","log","type","SearchFormButton","SearchFormButtonLabel","SearchFormInput","name","value","onChange","target","autoComplete","autoFocus","placeholder","FetchObject","base_url","api_key","this","_query","_page","_perPage","endPoint","a","axios","defaults","baseURL","params","query","page","url","get","result","data","hits","message","ImageGalleryItem","image","onImageClick","src","webformatURL","alt","tags","ImageGalleryItemImage","onClick","largeImageURL","id","Button","newFetchObject","ImageGallery","searchResults","setSearchResults","error","setError","useEffect","trim","resetPage","searchPhotos","then","catch","err","setTimeout","window","scrollTo","top","document","documentElement","scrollHeight","behavior","length","map","el","Modal","children","toggleModal","addEventListener","handleEscape","removeEventListener","code","createPortal","Overlay","currentTarget","getElementById","LoaderSpinner","color","height","width","timeout","App","images","setImages","largeImage","setLargeImage","showModal","setShowModal","isLoading","setIsLoading","prevState","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.0fa86937.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__3CvRl\",\"ImageGalleryItemImage\":\"ImageGalleryItem_ImageGalleryItemImage__2bkPr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__2AxMb\",\"Modal\":\"Modal_Modal__2WBTT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__DncjJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__3R1xi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"SearchBar_Searchbar__LuSsJ\",\"SearchForm\":\"SearchBar_SearchForm__1OsD8\",\"SearchFormButton\":\"SearchBar_SearchFormButton__1hCEk\",\"SearchFormButtonLabel\":\"SearchBar_SearchFormButtonLabel__2pz7t\",\"SearchFormInput\":\"SearchBar_SearchFormInput__3xRsP\"};","import { useState } from \"react\";\n\nexport const useToggle = (initValue) => {\n  const [state, setState] = useState(initValue);\n  const toggle = () => {\n    setState((prev) => !prev);\n  };\n  // console.log(\"useToggle\", state);\n  return [state, toggle];\n};\n","import s from \"./SearchBar.module.css\";\nimport { useState } from \"react\";\n\nexport function SearchBar({ getSearchValues }) {\n  const [searchValue, setSearchValue] = useState(\"\");\n  const [perPage, setPerPage] = useState(12);\n\n  const handleSearchChange = (e) => {\n    const { name, value } = e.target;\n    switch (name) {\n      case \"searchValue\":\n        setSearchValue(value);\n        break;\n      case \"perPage\":\n        setPerPage(value);\n        break;\n      default:\n    }\n  };\n  const handleSearchSubmit = (e) => {\n    e.preventDefault();\n    console.log(\"BEFORE FETCH\", searchValue, perPage);\n    getSearchValues({ searchValue, perPage });\n    setSearchValue(\"\");\n    // setPerPage(12);\n  };\n\n  return (\n    <header className={s.Searchbar}>\n      <form className={s.SearchForm} onSubmit={handleSearchSubmit}>\n        <button type=\"submit\" className={s.SearchFormButton}>\n          <span className={s.SearchFormButtonLabel}>Search</span>\n        </button>\n        <input\n          className={s.SearchFormInput}\n          type=\"text\"\n          name=\"searchValue\"\n          value={searchValue}\n          onChange={handleSearchChange}\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search images and photos\"\n        />\n      </form>\n    </header>\n  );\n}\n","import axios from \"axios\";\n\nexport class FetchObject {\n  constructor(base_url, api_key) {\n    this.base_url = base_url;\n    this.api_key = api_key;\n    this._query = \"\";\n    this._page = 1;\n    this._perPage = 12;\n    this.endPoint = \"\";\n  }\n  get searchQuery() {\n    return this._query;\n  }\n  set searchQuery(value) {\n    return (this._query = value);\n  }\n  get page() {\n    return this._page;\n  }\n  set page(value) {\n    return (this._page += value);\n  }\n  resetPage() {\n    return (this._page = 1);\n    // ((this._perPage = 12));\n  }\n  get perPage() {\n    return this._perPage;\n  }\n  set perPage(value) {\n    return (this._perPage = value);\n  }\n\n  async searchPhotos() {\n    axios.defaults.baseURL = this.base_url;\n\n    let params = `?key=${this.api_key}&q=${this.query}&page=${this.page}&per_page=${this.perPage}`;\n    let url = this.endPoint + params;\n\n    try {\n      const result = await axios.get(url);\n      const data = result.data.hits;\n      return data;\n    } catch (err) {\n      return err.message;\n    }\n  }\n}\n","import s from \"./ImageGalleryItem.module.css\";\nimport PropTypes from \"prop-types\";\n\nexport const ImageGalleryItem = ({ image, onImageClick }) => {\n  const fullImage = () => onImageClick(image.largeImageURL);\n  return (\n    <li key={image.id} className={s.ImageGalleryItem}>\n      <img\n        src={image.webformatURL}\n        alt={image.tags}\n        className={s.ImageGalleryItemImage}\n        onClick={fullImage}\n      />\n    </li>\n  );\n};\n\nImageGalleryItem.propTypes = {\n  image: PropTypes.shape({\n    webformatURL: PropTypes.string.isRequired,\n    tags: PropTypes.string,\n    largeImageURL: PropTypes.string.isRequired,\n  }),\n  onImageClick: PropTypes.func.isRequired,\n};\n","import s from \"./Button.module.css\";\n\nexport const Button = ({ onClick }) => {\n  return (\n    <div className=\"container\">\n      <button type=\"button\" className={s.Button} onClick={onClick}>\n        load more\n      </button>\n    </div>\n  );\n};\n","import s from \"./ImageGallery.module.css\";\nimport { useEffect, useState } from \"react\";\nimport { FetchObject } from \"../Services/pixabay\";\nimport { ImageGalleryItem } from \"../ImageGalleryItem/ImageGalleryItem\";\nimport { Button } from \"..//Button/Button\";\n\nconst base_url = `https://pixabay.com/api/`;\nconst api_key = `23194515-4229c06a71e7a36cb0b196559`;\nconst newFetchObject = new FetchObject(base_url, api_key);\n\nexport function ImageGallery({ searchValue, perPage, onImageClick }) {\n  const [searchResults, setSearchResults] = useState([]);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    if (!searchValue.trim()) return;\n    newFetchObject.resetPage();\n    newFetchObject.query = searchValue;\n    newFetchObject.perPage = perPage;\n    newFetchObject\n      .searchPhotos()\n      .then((searchResults) => {\n        setSearchResults(searchResults);\n      })\n      .catch((err) => {\n        setError(error);\n        console.log(err);\n      });\n  }, [searchValue, perPage, setSearchResults, error]);\n\n  if (newFetchObject.page !== 1) {\n    setTimeout(() => {\n      window.scrollTo({\n        top: document.documentElement.scrollHeight,\n        behavior: \"smooth\",\n      });\n    });\n  }\n\n  const handleClick = () => {\n    newFetchObject.page = 1;\n    newFetchObject\n      .searchPhotos()\n      .then((searchResults) => {\n        setSearchResults((prev) => [...prev, ...searchResults]);\n      })\n      .catch((err) => {\n        setError(error);\n        console.log(err);\n      });\n  };\n\n  return (\n    <>\n      <ul className={s.ImageGallery}>\n        {searchResults.length > 0 &&\n          searchResults.map((el) => (\n            <ImageGalleryItem\n              key={el.id}\n              image={el}\n              src={el.largeImageURL}\n              onImageClick={onImageClick}\n            />\n          ))}\n      </ul>\n      {searchResults.length >= 12 && <Button onClick={handleClick} />}\n    </>\n  );\n}\n","import s from \"./Modal.module.css\";\nimport { useEffect } from \"react\";\nimport { createPortal } from \"react-dom\";\n\nexport function Modal({ children, toggleModal }) {\n  useEffect(() => {\n    window.addEventListener(\"keydown\", handleEscape);\n    return () => {\n      window.removeEventListener(\"keydown\", handleEscape);\n    };\n  });\n\n  const handleEscape = (e) => {\n    if (e.code === \"Escape\") {\n      toggleModal();\n    }\n  };\n\n  const handleClose = (e) => {\n    if (e.currentTarget === e.target) {\n      toggleModal();\n    }\n  };\n\n  return createPortal(\n    <div className={s.Overlay} onClick={handleClose}>\n      <div className={s.Modal}>{children}</div>\n    </div>,\n    document.getElementById(\"modalRoot\")\n  );\n}\n","import Loader from \"react-loader-spinner\";\n\nexport default function LoaderSpinner() {\n  return (\n    <Loader\n      className=\"container\"\n      type=\"Grid\"\n      color=\"#3f51b5\"\n      height={100}\n      width={100}\n      timeout={3000} //3 secs\n    />\n  );\n}\n","import \"./App.css\";\nimport { useState, useEffect } from \"react\";\nimport { useToggle } from \"./hooks/useToggle\";\nimport { SearchBar } from \"./components/Searchbar/SearchBar\";\nimport { ImageGallery } from \"./components/ImageGallery/ImageGallery\";\nimport { Modal } from \"./components/Modal/Modal\";\nimport LoaderSpinner from \"./components/Loader/Loader\";\n\nfunction App() {\n  const [images, setImages] = useState([]);\n  const [searchValue, setSearchValue] = useState(\"\");\n  const [perPage, setPerPage] = useState(12);\n  const [largeImage, setLargeImage] = useState(\"\");\n  const [showModal, setShowModal] = useToggle(false);\n  const [isLoading, setIsLoading] = useToggle(false);\n\n  useEffect(\n    (prevState) => {\n      if (prevState !== images) {\n        setImages(images);\n      }\n    },\n    [images, setImages]\n  );\n\n  const getSearchValues = ({ searchValue, perPage }) => {\n    setIsLoading(!isLoading);\n    setSearchValue(searchValue);\n    setPerPage(perPage);\n  };\n\n  const onImageClick = (largeImageURL) => {\n    setLargeImage(largeImageURL);\n    setShowModal(!showModal);\n  };\n\n  return (\n    <div className=\"App\">\n      <SearchBar getSearchValues={getSearchValues} />\n\n      <ImageGallery\n        searchValue={searchValue}\n        perPage={perPage}\n        onImageClick={onImageClick}\n      />\n      {isLoading && <LoaderSpinner />}\n\n      {showModal && (\n        <Modal toggleModal={setShowModal}>\n          <img src={largeImage} alt=\"\" />\n        </Modal>\n      )}\n    </div>\n  );\n}\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}